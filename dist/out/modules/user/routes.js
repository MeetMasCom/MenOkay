"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var express_validation_1 = require("express-validation");
var jwtHelper_1 = require("../../helpers/jwtHelper");
var controler_1 = require("./controler");
var validation_1 = require("./validation");
var userRoutes = (0, express_1.Router)();
userRoutes.post("/", [(0, express_validation_1.validate)(validation_1.createUserValidation)], controler_1.createUserController);
userRoutes.post("/login", [(0, express_validation_1.validate)(validation_1.loginUserValidation)], controler_1.loginController);
userRoutes.post("/valid-login", [(0, express_validation_1.validate)(validation_1.otpUserValidation)], controler_1.otpController);
userRoutes.post("/logout/:id", [jwtHelper_1.validateJwtHeader, (0, express_validation_1.validate)(validation_1.getUserValidation)], controler_1.logoutController);
userRoutes.put("/basic/:id", [jwtHelper_1.validateJwtHeader, (0, express_validation_1.validate)(validation_1.updateUserBasicValidation)], controler_1.updateUserBasicController);
userRoutes.put("/address/:id", [jwtHelper_1.validateJwtHeader, (0, express_validation_1.validate)(validation_1.updateUserAddressValidation)], controler_1.updateUserAddressController);
userRoutes.put("/match/:id", [jwtHelper_1.validateJwtHeader, (0, express_validation_1.validate)(validation_1.updateUserMatchValidation)], controler_1.updateUserMatchController);
userRoutes.get("/count", controler_1.getCountUserController);
userRoutes.get("/validate/:search", [(0, express_validation_1.validate)(validation_1.getUserValidateValidation)], controler_1.getUserValidateController);
userRoutes.get("/:id", [jwtHelper_1.validateJwtHeader, (0, express_validation_1.validate)(validation_1.getUserValidation)], controler_1.getUserController);
userRoutes.post("/recover-username", [(0, express_validation_1.validate)(validation_1.recoverUsername)], controler_1.recoverUsernameController);
userRoutes.post("/recover-password", [(0, express_validation_1.validate)(validation_1.recoverPassword)], controler_1.recoverPasswordController);
userRoutes.post("/reset-password", [(0, express_validation_1.validate)(validation_1.resetPassword)], controler_1.resetPasswordController);
userRoutes.get("/userById/:id", controler_1.getByIdUserController);
userRoutes.get("/userByGender/:id", controler_1.getAllUserGenderController);
userRoutes.get("/userOnline/:id", controler_1.getUserOnlineController);
userRoutes.get("/userActive/:id", controler_1.getUserActiveController);
//userRoutes.get("/getAllUser", getAllUserController);
exports.default = userRoutes;
